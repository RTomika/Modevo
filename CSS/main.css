body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: var(--bgColor);
    scrollbar-width: thin;
    scrollbar-color: #d8d8d8 #1e1e1e;
}

/*Lenis scroll*/
html.lenis, html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

:root {
    --bgColor: hsl(0, 0%, 18%);
    --bgColorDark: hsl(0, 0%, 14%);
    --mainColor: rgb(226, 196, 22);
    --textColor: hsl(0, 0%, 15%);
    --lightTextColor: hsl(0, 0%, 95%);
    --grayTextColor: hsl(0, 0%, 70%);
}

a {
    text-decoration: none;
    color: inherit;
}

.dropScroll {
    opacity: 0;
    transform: translateY(-30px);
    transition: all 1s ease-in-out;
}
.dropShow {
    opacity: 1;
    transform: translateY(0);
}

.firstThing {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bgColor);
  opacity: 0;
  pointer-events: none;
  z-index: 0;
}

#mainNav { 
  position: fixed;
  top: 0;
  left: 50%;
  transform: translate(-50%, -30px);
  margin-top: 10px;
  background-color: hsla(0, 0%, 0%, 0.1);
  z-index: 9;
  backdrop-filter: blur(10px);
  border-radius: 10px;
  opacity: 0;
  max-width: 1400px;
  width: 90vw;
  transition: transform .8s ease-in-out,  opacity .8s ease-in-out, background-color .3s ease-in-out;
}
#mainNav:hover {
  background-color: hsla(0, 0%, 0%, 0.3);
}
.navWidth {
  margin: 0 20px 0px 0px;
}
#navbarText, .navBtns {
  color: var(--textColor);
}
.navBtns {
  position: relative;
  z-index: 10;
  transition: all .2s ease-in-out;
}
.navBtns::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--mainColor);
  height: 3px;
  border-radius: 4px;
  transform: scaleX(0);
  width: 100%;
  transition: all .2s ease-in-out;
}
.navBtns:hover::after {
  transform: scaleX(1);
}
.navBtns:hover {
  color: var(--lightTextColor);
  text-shadow: 1px 1px 3px var(--lightTextColor);
}

.hero {
  position: relative;
  height: 100vh;
  background-color: hsl(0, 0%, 4%);
  z-index: 2;
  overflow: hidden;
}

.firstThing {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: hsl(0, 0%, 10%);
  opacity: 0;
  pointer-events: none;
  z-index: 0;
}

#heroVideo {
  position: absolute;
  top: 50%;
  left: 50%;
  min-width: 100vw;
  min-height: 100vh;
  transform: translate(-50%, -50%);
  object-fit: cover;
  will-change: transform;
  opacity: 1;
  z-index: -1;
  transition: opacity .2s ease-in-out;
}

.content {
  position: absolute;
  z-index: 1;
  text-align: center;
  display: flex;
  flex-direction: column !important;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#mainText {
  font-family: "Poppins", sans-serif;
  color: transparent;
  background-clip: text !important;
  margin: 0;
  background: linear-gradient(to right, hsl(0, 0%, 5%), hsl(0, 0%, 50%));
  font-size: 6rem;
  font-weight: 600;
}
#heroSubText {
    font-family: "Poppins", sans-serif;
    font-weight: 600;
    color: hsl(0, 0%, 20%);
    font-size: 2rem;
}

#heroBtn {
  position: relative;
  background-color: hsla(0, 0%, 5%, 0.6);
  border-radius: 4px;
  color: hsl(0, 0%, 85%);
  font-family: "Poppins" sans-serif;
  font-weight: 600;
  width: 100%;
  margin: auto;
  padding: 3px 0;
  transition: all .3s ease-in-out;
}

#heroBtn::after {
    content: "";
    position: absolute;
    transform: scaleX(0);
    transform-origin: left;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--mainColor);
    transition: all .3s ease-in-out;
}
#heroBtn:hover {
  background-color: transparent;
  color: black;
}
#heroBtn:hover::after, #heroBtn:focus::after {
    transform: scaleX(1);
}

.arrowDown {
  position: absolute;
  bottom: 30px;
  left: 50%;
  opacity: 0;
  transform: translateX(-50%);
  font-size: 2.25rem;
  color: var(--textColor);
  transition: all .3s ease-in-out;
}
.arrowShow {
  opacity: 1;
  animation: arrowDown 2s infinite forwards;
}
@keyframes arrowDown {
  0% {transform: translate(0) translateX(-50%);}
  25% {transform: translateY(-40px) translateX(-50%);}
  26% {transform: translateY(-40px) translateX(-50%);}
  50% {transform: translateY(0) translateX(-50%);}
  100% {transform: translateY(0) translateX(-50%);}
}


.mainTexts {
  font-size: 5rem;
  color: transparent;
  font-family: "Poppins" sans-serif;
  font-weight: 600;
  background-clip: text !important;
  width: fit-content;
  margin: auto;
  margin-block: 50px;
  background: linear-gradient(to right, hsl(0, 0%, 90%), hsl(0, 0%, 45%));
}

/*Section 2*/

.boxes {
  position: relative;
  background-color: hsl(0, 0%, 12%);
  flex: 1 1 calc(33.333% - 13.33px);
  max-width: 400px;
  padding: 25px;
  border-radius: 30px;
  opacity: 0;
  overflow: hidden;
  transform: translateY(-50px);
  transition: all .5s ease-in-out;
}
.numbers {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  color: white;
  opacity: 0.05;
  font-size: 18rem;
}
.boxes h3 {
  color: hsl(0, 0%, 92%);
  font-family: "Poppins" sans-serif;
  font-size: 2rem;
}
.boxes p {
  color: hsl(0, 0%, 82%);
  font-family: "Roboto" sans-serif;
  font-size: 1rem;
}

#boxesRow {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 30px;
}


/*Contact section*/

.row {
  margin: 0;
}

.contactCont {
    position: relative;
    display: flex;
    height: fit-content;
    margin-bottom: 100px;
    align-items: center;
    justify-content: center;
}

.middleCont {
    position: relative;
    width: 80vw;
    max-width: 1200px;
    align-items: center;
    padding: 40px;
    color: var(--textColor);
    border-radius: 15px;
    background-color: var(--bgColorDark);
}
.middleCont h1 {
  margin-bottom: 30px;
  color: var(--lightTextColor);
  font-size: 2.75rem;
  font-family: "Poppins" sans-serif;
}
.middleCont p {
  font-size: 1.25rem;
  color: var(--grayTextColor);
  font-family: "Roboto" sans-serif;
}

.input-wrapper {
  position: relative;
  margin-bottom: 1.5rem;
}

.input-wrapper input {
  width: 100%;
  padding: 12px 8px;
  background-color: var(--bgColor);
  color: var(--lightTextColor);
  outline: none;
  font-family: "Roboto" sans-serif;
  font-size: 1.4rem;
  border: 2px solid rgba(0, 0, 0, 0);
  transition: border .2s ease-in-out;
}
.input-wrapper input:focus {
  border-bottom: 2px solid var(--mainColor);
}

.input-wrapper label {
  position: absolute;
  color: var(--textColor);
  left: 10px;
  top: 12px;
  background: transparent;
  padding: 0 4px;
  color: #aaa;
  font-size: 1.4rem;
  pointer-events: none;
  transition: 0.2s ease-in-out all;
}

.input-wrapper input:focus + label,
.input-wrapper input:not(:placeholder-shown) + label {
  top: -16px;
  left: 10px;
  font-size: 1.2rem;
  color: var(--grayTextColor);
}

.input-wrapper input::placeholder {
  color: transparent;
}

#text {
    font-size: 1.4rem;
    padding: 15px;
    width: 100%;
    height: 300px;
    color: var(--lightTextColor);
    outline: none;
    background-color: var(--bgColor);
    font-family: "Roboto" sans-serif;
    border: 2px solid rgba(0, 0, 0, 0);
    resize: none;
    margin-bottom: 10px;
    transition: border .2s ease-in-out;
}
#text:focus {
    border-bottom: 2px solid var(--mainColor);
}
#text::placeholder {
  font-family: "Roboto" sans-serif;
    color: #aaa;
    font-size: 1.4rem;
}
#submit {
    position: relative;
    font-size: 1.4rem;
    font-family: "Poppins" sans-serif;
    font-weight: 500;
    padding: 3px 24px;
    outline: none;
    border: none;
    z-index: 1;
    color: var(--textColor);
    background-color: var(--lightTextColor);
    transition: color .2s ease-in-out;
}
#submit::after {
    content: "";
    position: absolute;
    transform: scaleX(0);
    transform-origin: left;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    background-color: hsl(0, 0%, 8%);
    transition: all .3s ease-in-out;
}
#submit:hover {
  color: var(--lightTextColor);
}
#submit:hover::after, #submit:focus::after {
    transform: scaleX(1);
}